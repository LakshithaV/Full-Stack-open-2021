{"version":3,"sources":["component/Filter.js","component/PersonForm.js","component/Persons.js","services/persons.js","component/Notification.js","App.js","index.js"],"names":["Filter","props","value","onChange","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","persons","deletePerson","map","person","name","number","onClick","id","baseURL","axios","get","then","response","data","newObject","post","delete","put","Notification","notification","className","message","App","useState","setPersons","setNewName","setNewNumber","filterString","setStringFilter","setNotification","useEffect","personService","initialPersons","notifyWith","setTimeout","personsToShow","length","filter","p","toLowerCase","indexOf","event","console","log","target","preventDefault","existing","find","window","confirm","retunedPerson","addedPerson","concat","catch","error","toDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3699e508.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = (props) => {\r\n  return <input value={props.value} onChange={props.onChange} />;\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.addPerson}>\r\n      <div>\r\n        name: <input value={props.newName} onChange={props.handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number:{\" \"}\r\n        <input value={props.newNumber} onChange={props.handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Persons = ({ persons, deletePerson }) => {\r\n  return persons.map((person) => (\r\n    <p key={person.id}>\r\n      {person.name} {person.number}\r\n      <button onClick={() => deletePerson(person.id)}>delete</button>\r\n    </p>\r\n  ));\r\n};\r\n\r\nexport default Persons;\r\n","import axios from \"axios\";\r\nconst baseURL = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseURL);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseURL, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseURL}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseURL}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, remove, update };\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (notification === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className={notification.type}>{notification.message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useEffect, useState } from \"react\";\nimport Filter from \"./component/Filter\";\nimport PersonForm from \"./component/PersonForm\";\nimport Persons from \"./component/Persons\";\nimport personService from \"./services/persons\";\nimport Notification from \"./component/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filterString, setStringFilter] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const notifyWith = (message, type = \"success\") => {\n    setNotification({ message, type });\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    const existing = persons.find((p) => p.name === newName);\n    if (existing) {\n      const ok = window.confirm(\n        `${existing.name} already in phonebook, replace the old number with new one?`\n      );\n      if (ok) {\n        personService\n          .update(existing.id, {\n            name: existing.name,\n            number: newNumber,\n          })\n          .then((retunedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== existing.id ? person : retunedPerson\n              )\n            );\n            notifyWith(`Changed number of  ${existing.name}`);\n            setNewName(\"\");\n            setNewNumber(\"\");\n          });\n      }\n    } else {\n      personService\n        .create({\n          name: newName,\n          number: newNumber,\n        })\n        .then((addedPerson) => {\n          setPersons(persons.concat(addedPerson));\n          notifyWith(`Added ${newName}`);\n          setNewName(\"\");\n          setNewNumber(\"\");\n        })\n        .catch((error) => {\n          console.log(error.response.data.error);\n          notifyWith(`${error.response.data.error} `, \"error\");\n        });\n    }\n  };\n\n  const deletePerson = (id) => {\n    const toDelete = persons.find((p) => p.id === id);\n    const ok = window.confirm(`Delete ${toDelete.name}`);\n    if (ok) {\n      personService\n        .remove(id)\n        .then((response) => {\n          setPersons(persons.filter((p) => p.id !== id));\n          notifyWith(`Deleted ${toDelete.name}`);\n        })\n        .catch(() => {\n          setPersons(persons.filter((p) => p.id !== id));\n          notifyWith(`${toDelete.name} had already been removed`, \"error\");\n        });\n    }\n  };\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value);\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value);\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterStringChange = (event) => {\n    console.log(event.target.value);\n    setStringFilter(event.target.value);\n  };\n\n  const personsToShow =\n    filterString.length === 0\n      ? persons\n      : persons.filter(\n          (p) => p.name.toLowerCase().indexOf(filterString.toLowerCase()) > 0\n        );\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification notification={notification} />\n\n      <div>\n        filter shown with:{\" \"}\n        <Filter value={filterString} onChange={handleFilterStringChange} />\n      </div>\n\n      <h2>add a new</h2>\n\n      <PersonForm\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        newName={newName}\n        newNumber={newNumber}\n        addPerson={addPerson}\n      />\n\n      <h2>Numbers</h2>\n\n      <Persons persons={personsToShow} deletePerson={deletePerson} />\n\n      <div>debug: {newName}</div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}